/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package CalculatorProject;

/**
 *
 * @author m1
 */
public class CalculatorScreen extends javax.swing.JDialog {
    
    String totalHistory="";
    double number1=0;
    boolean flag=false;
    int count=0;
    
    char op = 'a';
    
    /**
     * Creates new form CalculatorScreen
     */
    public CalculatorScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public CalculatorScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        main = new javax.swing.JTextArea();
        history = new javax.swing.JTextField();
        panel1 = new java.awt.Panel();
        mod = new javax.swing.JButton();
        sqrt = new javax.swing.JButton();
        square = new javax.swing.JButton();
        oneOver = new javax.swing.JButton();
        CE = new javax.swing.JButton();
        C = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        Divide = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        subtract = new javax.swing.JButton();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        add = new javax.swing.JButton();
        plusminus = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        decimal = new javax.swing.JButton();
        equal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        main.setColumns(20);
        main.setRows(5);
        jScrollPane1.setViewportView(main);

        history.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyActionPerformed(evt);
            }
        });

        panel1.setLayout(new java.awt.GridLayout(6, 4, 2, 1));

        mod.setText("%");
        mod.setActionCommand("mod");
        mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modActionPerformed(evt);
            }
        });
        panel1.add(mod);

        sqrt.setText("√");
        sqrt.setActionCommand("sqrt");
        sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtActionPerformed(evt);
            }
        });
        panel1.add(sqrt);

        square.setText("x^2");
        square.setActionCommand("square");
        square.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareActionPerformed(evt);
            }
        });
        panel1.add(square);

        oneOver.setText("1/x");
        oneOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneOverActionPerformed(evt);
            }
        });
        panel1.add(oneOver);

        CE.setText("CE");
        CE.setActionCommand("mod");
        CE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CEActionPerformed(evt);
            }
        });
        panel1.add(CE);

        C.setText("C");
        C.setActionCommand("sqrt");
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });
        panel1.add(C);

        Back.setText("<-");
        Back.setActionCommand("square");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        panel1.add(Back);

        Divide.setText("÷");
        Divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivideActionPerformed(evt);
            }
        });
        panel1.add(Divide);

        seven.setText("7");
        seven.setActionCommand("mod");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });
        panel1.add(seven);

        eight.setText("8");
        eight.setActionCommand("sqrt");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });
        panel1.add(eight);

        nine.setText("9");
        nine.setActionCommand("square");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });
        panel1.add(nine);

        multiply.setText("X");
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });
        panel1.add(multiply);

        four.setText("4");
        four.setActionCommand("mod");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });
        panel1.add(four);

        five.setText("5");
        five.setActionCommand("sqrt");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });
        panel1.add(five);

        six.setText("6");
        six.setActionCommand("square");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });
        panel1.add(six);

        subtract.setText("-");
        subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }
        });
        panel1.add(subtract);

        one.setText("1");
        one.setActionCommand("mod");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });
        panel1.add(one);

        two.setText("2");
        two.setActionCommand("sqrt");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });
        panel1.add(two);

        three.setText("3");
        three.setActionCommand("square");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });
        panel1.add(three);

        add.setText("+");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        panel1.add(add);

        plusminus.setText("±");
        plusminus.setActionCommand("mod");
        plusminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusminusActionPerformed(evt);
            }
        });
        panel1.add(plusminus);

        zero.setText("0");
        zero.setActionCommand("sqrt");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });
        panel1.add(zero);

        decimal.setText(".");
        decimal.setActionCommand("square");
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });
        panel1.add(decimal);

        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });
        panel1.add(equal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(history))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(history, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modActionPerformed
        // TODO add your handling code here:
         op = '%';
        if(number1!=0){
            flag = true;
        }
        else{
            number1 = Double.parseDouble(main.getText());
            flag = true;
        }
        
        String hist=history.getText();
        if(hist.charAt(hist.length()-1) >= '0' && hist.charAt(hist.length()-1) <= '9')
            history.setText(history.getText() + "%");
    }//GEN-LAST:event_modActionPerformed

    private void historyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_historyActionPerformed

    private void oneOverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneOverActionPerformed
        // TODO add your handling code here:
        
        
        String val = history.getText();
        
        val = val.substring(0,val.length()-main.getText().length());
        
        
        double number2 = Double.parseDouble(main.getText());
        
        
        double result = 1/number2;
        
        
        int res = (int) result;
        
        String temp = result+"";
        String temp2 = res+".0";
        
        if(temp.equals(temp2))
            main.setText(res+"");
        else
            main.setText(result+"");
        
        number1 = result;
        flag = true;
        
        
        history.setText(result+"");
        
        
    }//GEN-LAST:event_oneOverActionPerformed

    private void CEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CEActionPerformed
        // TODO add your handling code here:
        history.setText("");
        main.setText("");
        totalHistory="";
        number1=0;
        flag=false;
        count=0;
        
        op = 'a';
        
    }//GEN-LAST:event_CEActionPerformed

    private void DivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivideActionPerformed
        // TODO add your handling code here:
        op = '/';
        if(number1!=0){
            flag = true;
        }
        else{
            number1 = Double.parseDouble(main.getText());
            flag = true;
        }
        
        String hist=history.getText();
        if(hist.charAt(hist.length()-1) >= '0' && hist.charAt(hist.length()-1) <= '9')
            history.setText(history.getText() + "/");
        
    }//GEN-LAST:event_DivideActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        // TODO add your handling code here:
        
        String val = history.getText();
        
        val = val.substring(0,val.length()-main.getText().length());
        
        history.setText(val);
        main.setText("");
    }//GEN-LAST:event_CActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:
        
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="7");
        }
        else {
            main.setText("7");
        }
        totalHistory += "7";
        
        history.setText(history.getText() + 7);
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="8");
        }
        else {
            main.setText("8");
        }
        totalHistory += "8";
        
        history.setText(history.getText() + 8);
        
    }//GEN-LAST:event_eightActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
        // TODO add your handling code here:
        op = '*';
        if(number1!=0){
            flag = true;
        }
        else{
            number1 = Double.parseDouble(main.getText());
            flag = true;
        }
        
        String hist=history.getText();
        if(hist.charAt(hist.length()-1) >= '0' && hist.charAt(hist.length()-1) <= '9')
            history.setText(history.getText() + "*");
        
    }//GEN-LAST:event_multiplyActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="4");
        }
        else {
            main.setText("4");
        }
        totalHistory += "4";
        
        history.setText(history.getText() + 4);
        
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="5");
        }
        else {
            main.setText("5");
        }
        totalHistory += "5";
        
        history.setText(history.getText() + 5);
        
    }//GEN-LAST:event_fiveActionPerformed

    private void subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractActionPerformed
        // TODO add your handling code here:
        op = '-';
        if(number1!=0){
            flag = true;
        }
        else{
            number1 = Double.parseDouble(main.getText());
            flag = true;
        }
        
        String hist=history.getText();
        if(hist.charAt(hist.length()-1) >= '0' && hist.charAt(hist.length()-1) <= '9')
            history.setText(history.getText() + "-");
        
    }//GEN-LAST:event_subtractActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="1");
        }
        else {
            main.setText("1");
        }
        totalHistory += "1";
        
        history.setText(history.getText() + 1);
        
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="2");
        }
        else {
            main.setText("2");
        }
        totalHistory += "2";
        
        history.setText(history.getText() + 2);
        
    }//GEN-LAST:event_twoActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        op = '+';
        if(number1!=0){
            flag = true;
        }
        else{
            number1 = Double.parseDouble(main.getText());
            flag = true;
        }
        
        String hist=history.getText();
        if(hist.charAt(hist.length()-1) >= '0' && hist.charAt(hist.length()-1) <= '9')
            history.setText(history.getText() + "+");
    }//GEN-LAST:event_addActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="0");
        }
        else {
            main.setText("0");
        }
        totalHistory += "0";
        
        history.setText(history.getText() + 0);
        
    }//GEN-LAST:event_zeroActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
        // TODO add your handling code here:
        
        if(number1!=0){
            double number2 = Double.parseDouble(main.getText());
            
            
            double result = 0;
            
            if(op == '/')
            {    result = number1/number2;
            //     history.setText(history.getText()+"/");
            } else if(op == '+'){
                result = number1+number2;
                //      history.setText(history.getText()+"+");
            }
            else if(op == '-')
            {
                result = number1-number2;
                //history.setText(history.getText()+"-");
            } else if(op == '*')
            {
                result = number1*number2;
                //history.setText(history.getText()+"*");
            }
            else if(op == '%'){
               result = number1% (number2);
             
            }
            int res = (int) result;
            
            String temp = result+"";
            String temp2 = res+".0";
            
            if(temp.equals(temp2))
                main.setText(res+"");
            else
                main.setText(result+"");
            
            number1 = result;
            flag = true;
            
        }
        
    }//GEN-LAST:event_equalActionPerformed

    private void plusminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusminusActionPerformed
        // TODO add your handling code here:
        
        String val = main.getText();
        
        double val2 = Double.parseDouble(val);
        val2 *= -1;
        
        int res = (int) val2;
        
        String temp = val+"";
        String temp2 = res+".0";
        
        if(temp.equals(temp2))
            main.setText(res+"");
        else
            main.setText(val2+"");
    }//GEN-LAST:event_plusminusActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="3");
        }
        else {
            main.setText("3");
        }
        totalHistory += "3";
        
        history.setText(history.getText() + 3);
        
    }//GEN-LAST:event_threeActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="6");
        }
        else {
            main.setText("6");
        }
        totalHistory += "6";
        
        history.setText(history.getText() + 6);
        
    }//GEN-LAST:event_sixActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+="9");
        }
        else {
            main.setText("9");
        }
        totalHistory += "9";
        
        history.setText(history.getText() + 9);
        
    }//GEN-LAST:event_nineActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        String val = history.getText();
        
        val = val.substring(0 , val.length()-1);
        
        history.setText(val);
        
        val = main.getText();
        val = val.substring(0,val.length()-1);
        main.setText(val);
    }//GEN-LAST:event_BackActionPerformed

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
        // TODO add your handling code here:
        if(flag == true)
        {
            main.setText("");
            flag=false;
        }
        
        if(!main.getText().equals("") ){
            
            String value = main.getText();
            main.setText(value+=".");
        }
        else {
            main.setText(".");
        }
        totalHistory += ".";
        
        history.setText(history.getText() + ".");
        
    }//GEN-LAST:event_decimalActionPerformed

    private void squareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareActionPerformed
        // TODO add your handling code here:
        String val = history.getText();
        
        val = val.substring(0,val.length()-main.getText().length());
        
        
        double number2 = Double.parseDouble(main.getText());
        
        
        double result = number2*number2;
        
        
        int res = (int) result;
        
        String temp = result+"";
        String temp2 = res+".0";
        
        if(temp.equals(temp2))
        {  main.setText(res+"");
        
        history.setText(res+"");
        
        }else
        {
            
            history.setText(result+"");
            main.setText(result+"");
        }
        number1 = result;
        flag = true;
        
        
    }//GEN-LAST:event_squareActionPerformed

    private void sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtActionPerformed
        // TODO add your handling code here:
        String val = history.getText();
        
        val = val.substring(0,val.length()-main.getText().length());
        
        
        double number2 = Double.parseDouble(main.getText());
        
        
        double result = Math.sqrt(number2);
        
        
        int res = (int) result;
        
        String temp = result+"";
        String temp2 = res+".0";
        
        if(temp.equals(temp2))
        {  main.setText(res+"");
        
        history.setText(res+"");
        
        }else
        {
            
            history.setText(result+"");
            main.setText(result+"");
        }
        number1 = result;
        flag = true;
        
    }//GEN-LAST:event_sqrtActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CalculatorScreen dialog = new CalculatorScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton C;
    private javax.swing.JButton CE;
    private javax.swing.JButton Divide;
    private javax.swing.JButton add;
    private javax.swing.JButton decimal;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JTextField history;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea main;
    private javax.swing.JButton mod;
    private javax.swing.JButton multiply;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton oneOver;
    private java.awt.Panel panel1;
    private javax.swing.JButton plusminus;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton sqrt;
    private javax.swing.JButton square;
    private javax.swing.JButton subtract;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
